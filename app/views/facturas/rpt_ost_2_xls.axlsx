$LOAD_PATH.unshift "#{File.dirname(__FILE__)}/../lib"

require 'axlsx'

p = Axlsx::Package.new
wb = xlsx_package.workbook
wb.styles do |s|
    date = s.add_style(:format_code => "yyyy-mm-dd", :border => Axlsx::STYLE_THIN_BORDER,:alignment=>{:horizontal => :right})
    padded = s.add_style(:format_code => "00#", :border => Axlsx::STYLE_THIN_BORDER)
    percent = s.add_style(:format_code => '#.##0.00', :border => Axlsx::STYLE_THIN_BORDER)
    title = s.add_style(:bg_color => "FFFF0000", :fg_color=>"#FF000000",:border=>Axlsx::STYLE_THIN_BORDER,:alignment=>{:horizontal => :center})
    cadena =s.add_style(:border=>Axlsx::STYLE_THIN_BORDER,:alignment=>{:horizontal => :left})

    currency = wb.styles.add_style(:format_code=>"#,##0.#0;[Red]-#,##0.#0",
                              :border=>Axlsx::STYLE_THIN_BORDER)
    red_negative = wb.styles.add_style :num_fmt => 8
    comma = wb.styles.add_style :num_fmt => 3
    super_funk = wb.styles.add_style :format_code => '[Green]#'
    

    wb.add_worksheet(name: "Facturas Soles") do |sheet|
    

    sheet.add_row ["Nro.Salida","Fecha", "Codigo","Producto","Unidad", "Proveedor","Empleado","Placa", "Cantidad","Precio","Total" ], :style => title 
    
   @orden_transporte.each do |orden|
                
            st  = orden.get_manifest 
  
            row = []
            blanco = ""

            @importe_st = 0

            if st.nil?
              row << ""
              row << ""
              row << ""
              row << ""
              row << ""

              row << ""
              row << ""
              row << ""
              row << ""
              row << ""

            else 

              row << ""
              row << st.fecha1.strftime("%d/%m/%Y")
              row << st.code
              row << st.customer.name 
              row << st.especificacion
              row << st.tipocargue.name
              row << st.direccion1
              row << st.direccion2 
              row << st.importe2
              row << st.importe
              @importe_st = st.importe
            end 


            row << orden.fecha1.strftime("%d/%m/%Y")  
            row << orden.code 
            row << orden.employee.full_name
            row << orden.get_empleado(orden.employee2_id)
            row << orden.truck.placa 
            row << orden.get_placa(orden.truck2_id) 
            row << orden.get_placa(orden.truck3_id) 
            row << orden.get_tipounidad(orden.truck_id)
            row << orden.get_ejes2(orden.id )
            
            @destino =  orden.get_punto(orden.ubication_id) +"-" + orden.get_punto(orden.ubication2_id)
            row << orden.get_propio(orden.truck3_id) 
            row << orden.code 
            row << orden.get_placa(orden.truck3_id) 
            row << orden.get_empleado(orden.employee4_id)
           

            nroitem=nroitem + 1
            @guias = orden.get_delivery(orden.id)

                lcGuiaCode = ""
                lcGuiaDes  = ""
                lcFecha1 = ""
                lcFecha2 = ""
                lcComments = ""
                lcOstFecha1 = ""
                lcOstFecha2 = ""
                lcpendiente ="PENDIENTE"

               for guias in @guias 

                  lcGuiaCode  << guias.code + "\n"
                  lcGuiaDes   << guias.description + "\n"
                  lcFecha1    << guias.fecha1.to_s[0..10] + "\n"
                  lcFecha2    << guias.created_at.to_s[0..10] + "\n"
                  lcComments  << guias.comments + "\n"
                  lcOstFecha1 << orden.fecha1.to_s[0..10] + "\n"
                  lcOstFecha2 << orden.fecha2.to_s[0..10] + "\n"

                  lcpendiente = "LIQUIDADO"
               end 
                
                row << lcGuiaCode 
                row << lcGuiaDes
                row << lcFecha1 
                row << lcFecha2 
                row << orden.get_processed
                

                row << lcpendiente
              
                row << lcOstFecha2
                row << "  "
               
            

              @facturas = orden.get_facturas(orden.id)

             
             
                lcFactCode = ""
                lcFactFecha = ""
                lcfacturasTotal_s = ""
                lcfacturasTotal_d = ""
                lcFacturasImporte = 0
                lcFacturasImporte2 = 0


                if @facturas 
                for facturas in @facturas 
                  puts "facturass ...................................."
                  puts facturas.code
                  puts facturas.fecha.strftime("%d/%m/%Y") 
                  puts facturas.total 

                  lcFactCode << facturas.code + "\n"
                  lcFactFecha  << facturas.fecha.to_s[0..10] + "\n"

                  if facturas.moneda_id == 2
                    lcfacturasTotal_s << facturas.total.round(2).to_s + "\n"
                    lcFacturasImporte  = facturas.total.round(2)
                  else
                    lcfacturasTotal_d << facturas.total.round(2).to_s + "\n"
                     lcFacturasImporte2  = facturas.total.round(2)
                  end 
                    @cobranzas = facturas.get_pagos



                end 
              end 
                  lcPendienteFacturar = lcFacturasImporte - @importe_st

                   row <<  lcFactCode
                    row << lcFactFecha
                    row << lcfacturasTotal_s 
                    row << lcfacturasTotal_d 
                    row << lcPendienteFacturar
                           
                    lcPendienteCobrar =  lcFacturasImporte 

                    row << ""
                    row << ""
                                      
                    row << ""
                    row << ""
                    row << lcPendienteCobrar 

            
                 
               
               table_content << row 
                 
            
          end




        sheet.add_row [payment.code.strip,payment.fecha,payment.codigo,
          payment.nameproducto,payment.unidad,payment.supplier.name,xemployee,payment.truck.placa, payment.quantity,payment.price,xtotal,categoria  ], 
    :style => 
        [cadena,date,cadena,cadena,cadena,cadena,cadena,cadena,currency,currency,currency,cadena]
        
   end   
    end


   

  ##
end 

    
