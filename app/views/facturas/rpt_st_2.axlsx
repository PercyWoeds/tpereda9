$LOAD_PATH.unshift "#{File.dirname(__FILE__)}/../lib"

require 'axlsx'

p = Axlsx::Package.new
wb = xlsx_package.workbook
wb.styles do |s|
    date = s.add_style(:format_code => "yyyy-mm-dd", :border => Axlsx::STYLE_THIN_BORDER,:alignment=>{:horizontal => :right})
    padded = s.add_style(:format_code => "00#", :border => Axlsx::STYLE_THIN_BORDER)
    percent = s.add_style(:format_code => '#.##0.00', :border => Axlsx::STYLE_THIN_BORDER)
    title = s.add_style(:bg_color => "FFFF0000", :fg_color=>"#FF000000",:border=>Axlsx::STYLE_THIN_BORDER,:alignment=>{:horizontal => :center})
    cadena =s.add_style(:border=>Axlsx::STYLE_THIN_BORDER,:alignment=>{:horizontal => :left})

    currency = wb.styles.add_style(:format_code=>"#,##0.#0;[Red]-#,##0.#0",
                              :border=>Axlsx::STYLE_THIN_BORDER)
    red_negative = wb.styles.add_style :num_fmt => 8
    comma = wb.styles.add_style :num_fmt => 3
    super_funk = wb.styles.add_style :format_code => '[Green]#'
    
    wb.add_worksheet(name: "Basic work sheet") do |sheet|
    
    sheet.add_row ["Fecha", "Registro", "Cliente", "Origen","Destino","Importe S/.","Escolta S/.","Stand by S/.", "Empaletizado S/.","Montacarga S/.","Importe US$","Escolta US$","Stand by US$","OST","Procesado"], 
    :style => title 


   @facturas_rpt.each do |manifest|
        
          lcDes1 ="" 
           a ="" 

           existe2 = manifest.get_osts() 
              if existe2.size > 0 
              for guia in existe2  
                a << guia.code << "  "
                end  
              end   
            lcDes1 << a

        sheet.add_row [manifest.fecha1,  manifest.code,manifest.customer.name,manifest.direccion1,manifest.direccion2,
        manifest.importe,manifest.escolta_pen,manifest.stand_by_pen,manifest.empaletizado,manifest.montacarga,manifest.importe2,manifest.escolta,manifest.stand_by,lcDes1,manifest.get_processed], :style => [ date,cadena,cadena,cadena,cadena,currency,currency,currency,currency,currency,currency,currency,currency,cadena,cadena]
      
   end

   
   
end
end 

    
